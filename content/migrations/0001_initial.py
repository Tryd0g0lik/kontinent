# Generated by Django 4.2.20 on 2025-08-27 05:27

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="PageModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("url", models.URLField(verbose_name="URL")),
                (
                    "title",
                    models.CharField(
                        help_text="This is unique page's title",
                        max_length=255,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter valid title!",
                                regex="(^[A-ZА-Я][\\w -\\.,]+)",
                            )
                        ],
                        verbose_name="Title",
                    ),
                ),
                (
                    "text",
                    models.TextField(
                        help_text="This is page's text. Basis content.",
                        verbose_name="Text",
                    ),
                ),
            ],
            options={
                "verbose_name": "Page",
                "verbose_name_plural": "Pages",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="VideoContentModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="This is unique file's title",
                        max_length=255,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter valid title!",
                                regex="(^[A-ZА-Я][\\w -\\.,]+)",
                            )
                        ],
                        verbose_name="Title",
                    ),
                ),
                (
                    "counter",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Counter of views",
                        verbose_name="Counter of views",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Order", verbose_name="Order"
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[("video", "Video"), ("audio", "Audio")],
                        default="video",
                        help_text="Content type",
                        max_length=10,
                        verbose_name="Content type",
                    ),
                ),
                (
                    "video_url",
                    models.URLField(
                        help_text="Pathname to the video file",
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter valid URL!",
                                regex="(^[a-z][a-z0-9-\\/_]+\\/$)",
                            )
                        ],
                        verbose_name="Video URL",
                    ),
                ),
                (
                    "subtitles_url",
                    models.URLField(
                        blank=True,
                        help_text="Pathname to the subtitles file",
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter valid URL!",
                                regex="(^[a-z][a-z0-9-\\/_]+\\/$)",
                            )
                        ],
                        verbose_name="Subtitles URL",
                    ),
                ),
                (
                    "page",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="content.pagemodel",
                        verbose_name="Page",
                    ),
                ),
            ],
            options={
                "verbose_name": "Video Content",
                "verbose_name_plural": "Video Contents",
            },
        ),
        migrations.CreateModel(
            name="AudioContentModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="This is unique file's title",
                        max_length=255,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter valid title!",
                                regex="(^[A-ZА-Я][\\w -\\.,]+)",
                            )
                        ],
                        verbose_name="Title",
                    ),
                ),
                (
                    "counter",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Counter of views",
                        verbose_name="Counter of views",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Order", verbose_name="Order"
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[("video", "Video"), ("audio", "Audio")],
                        default="video",
                        help_text="Content type",
                        max_length=10,
                        verbose_name="Content type",
                    ),
                ),
                (
                    "audio_url",
                    models.URLField(
                        help_text="Pathname to the audio file",
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter valid URL!",
                                regex="(^[a-z][a-z0-9-\\/_]+\\/$)",
                            )
                        ],
                        verbose_name="Audio URL",
                    ),
                ),
                (
                    "text",
                    models.TextField(
                        help_text="This is the audio content", verbose_name="Text"
                    ),
                ),
                (
                    "page",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="content.pagemodel",
                        verbose_name="Page",
                    ),
                ),
            ],
            options={
                "verbose_name": "Audio Content",
                "verbose_name_plural": "Audio Contents",
            },
        ),
    ]
