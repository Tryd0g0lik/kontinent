"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 4.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path
from django.utils.translation import gettext_lazy as _
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
from dotenv_ import (POSTGRES_HOST, POSTGRES_PORT, DB_ENGINE, SECRET_KEY_DJ, DB_TO_REMOTE_HOST,
                     DATABASE_LOCAL, DATABASE_ENGINE_LOCAL, APP_TIME_ZONE)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = f"{SECRET_KEY_DJ}"
if not SECRET_KEY:
    raise ValueError("SECRET_KEY must be set in environment variables")

ALLOWED_HOSTS = [
    '127.0.0.1',
    f"{DB_TO_REMOTE_HOST}",
    '0.0.0.0',
]
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Application definition

INSTALLED_APPS = [
    "daphne",
    'rest_framework',
    'corsheaders',
    'drf_yasg',
    'adrf',
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "content",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    'corsheaders.middleware.CorsMiddleware',
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(BASE_DIR, "templates"),
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

ASGI_APPLICATION = "project.asgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        'ENGINE': f'{DATABASE_ENGINE_LOCAL}',
        'NAME': BASE_DIR / f'{DATABASE_LOCAL}',
    },
    # "default": {
    #     'ENGINE': f'{DB_ENGINE}',
    #     'NAME': f'{POSTGRES_DB}',
    #     'USER': f'{POSTGRES_USER}',
    #     'PASSWORD': POSTGRES_PASSWORD,
    #     'HOST': f'{POSTGRES_HOST}',
    #     'PORT': f'{POSTGRES_PORT}',
    #     "KEY_PREFIX": "drive_", # it's my prefix for the keys
    # }
}
# '''CELERY"""
# 'celeryconfig.py' contains more information,
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "ru"

TIME_ZONE = f"{APP_TIME_ZONE}"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATICFILES_DIRS = [
    os.path.join(BASE_DIR,  "static"),
]
STATIC_ROOT = os.path.join(BASE_DIR,  "collectstatic/")
STATIC_URL = '/static/'


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# 'MEDIA_PATH_TEMPLATE' - this variable is my own.
MEDIA_PATH_TEMPLATE_AUDIO = "%Y/%m/%d/audio/"
MEDIA_PATH_TEMPLATE_VIDEO = "%Y/%m/%d/video/"
FIELD_NAME_LIST = ["audio_path","video_path", "video", "audio" ]
# Options for file's repository/source
DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
DEFAULT_CHARSET = "utf-8"

# Here, we allow the URL list for publicated
CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:8000",
    f"http://{DB_TO_REMOTE_HOST}:{POSTGRES_PORT}",
    "http://0.0.0.0:8000",
]

CORS_ALLOW_CREDENTIALS = True
# Allow the methods to the methods in HTTP
CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]

CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "Authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    "Accept-Language",
    "Content-Language"
]

# ***REST_FRAMEWORK
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
}

# '''lOGGING'''
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'debug.log'),
        },
    },
    "loggers": {
        "django": {
            "handlers": ["console"],
            "level": "INFO",
        },
        'content': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

# """SWAGGER"""
# https://drf-yasg.readthedocs.io/en/stable/security.html#security-definitions
SWAGGER_USE_COMPAT_RENDERERS = False
SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    },
    'USE_SESSION_AUTH': False,
    'JSON_EDITOR': True,
    'VALIDATOR_URL': None,
    'exclude_namespaces':[

    ]
}

# VIEWS OF CONTENTS
CONTENT_TYPES_CHOICES = [
        ("video", _("Video")),
        ("audio", _("Audio")),
    ]
# Separating of file by chunk and after read the file and yield chunks of ``chunk_size`` bytes
DEFAULT_CHUNK_SIZE = 8192
# File upload settings
FILE_UPLOAD_MAX_MEMORY_SIZE = 2621440  # 2.5 MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 5242880  # 5 MB
